HMI 2
-----


Release Notes 
-------------

Version 0.7a		12/04/2010 
------------------------------

	* Se modififica la definicion de la tabla "nacimientos" quedando de la siguiente forma:
	
		/* nacimientos */
		CREATE TABLE nacimientos (
			id_nacimiento 						INTEGER 	UNSIGNED 	NOT NULL 	AUTO_INCREMENT,
			id_internacion 						INTEGER 	UNSIGNED 	NOT NULL,
			peso 								SMALLINT	UNSIGNED	NOT NULL	COMMENT 'Peso al nacer en gramos',
			condicion_al_nacer	 				TINYINT 	UNSIGNED 	NOT NULL	COMMENT '1=nacido vivo; 2=defuncion fetal',
			terminacion 						TINYINT 	UNSIGNED 	NOT NULL	COMMENT '1=vaginal; 2=cesarea',
			sexo 								TINYINT 	UNSIGNED 	NOT NULL	COMMENT '1=masculino; 2=femenino; 3=indeterminado',
			PRIMARY KEY(id_nacimiento),
			FOREIGN KEY fk_id_internacion (id_internacion)
				REFERENCES internaciones(id_internacion)
					ON DELETE NO ACTION
					ON UPDATE NO ACTION
		);

	* Se agrega el campo "egr_completo" a la tabla "internaciones" que especifica si se completo el
		informe de egreso
		
			egr_completo		BOOLEAN			NOT NULL
			
	* Se modifica la estructura de la tabla "pases" a la siguiente:
	
		CREATE TABLE pases (
			id_pase 					INTEGER 	UNSIGNED 	NOT NULL 	AUTO_INCREMENT,
			id_internacion 				INTEGER 	UNSIGNED 	NOT NULL,
			id_servicio_sala_entrada	INTEGER 	UNSIGNED 	NOT NULL,
			fecha_entrada				DATETIME				NOT NULL,
			tipo_entrada				CHAR(1)					NOT NULL	COMMENT 'I=ingreso; P=pase de',
			id_pase_de					INTEGER 	UNSIGNED 	NULL		COMMENT 'id_pase de donde viene (solo pases)',
			id_servicio_sala_salida		INTEGER 	UNSIGNED 	NULL,
			fecha_salida				DATETIME				NULL,
			tipo_salida					CHAR(1)					NULL		COMMENT 'A=alta medica; O=obito; P=pase a',
			id_pase_a					INTEGER 	UNSIGNED 	NULL		COMMENT 'id_pase a donde va (solo pases)',
			estado_pase 				CHAR(1) 				NOT NULL 	COMMENT 'P=pendiente; A=aceptado; E=egresado',
			id_cama 					INTEGER 	UNSIGNED 	NULL 		COMMENT 'No debe restringir el ingreso si la cama esta ocupada',
			observacion_pase 			VARCHAR(255) NULL,
			PRIMARY KEY(id_pase),
			FOREIGN KEY fk_id_internacion (id_internacion)
				REFERENCES internaciones(id_internacion)
					ON DELETE NO ACTION
					ON UPDATE NO ACTION,
			FOREIGN KEY fk_id_servicio_sala_entrada (id_servicio_sala_entrada)
				REFERENCES servicios_salas(id_servicio_sala)
					ON DELETE NO ACTION
					ON UPDATE NO ACTION,
			FOREIGN KEY fk_id_servicio_sala_salida (id_servicio_sala_salida)
				REFERENCES servicios_salas(id_servicio_sala)
					ON DELETE NO ACTION
					ON UPDATE NO ACTION,
			FOREIGN KEY fk_id_cama (id_cama)
				REFERENCES camas(id_cama)
					ON DELETE NO ACTION
					ON UPDATE NO ACTION,
			FOREIGN KEY fk_id_pase_de (id_pase_de)
				REFERENCES pases(id_pase)
					ON DELETE NO ACTION
					ON UPDATE NO ACTION,
			FOREIGN KEY fk_id_pase_a (id_pase_a)
				REFERENCES pases(id_pase)
					ON DELETE NO ACTION
					ON UPDATE NO ACTION
		);
		
		NOTAS:
		------
			
				Se agregan los campos "id_pase_a" y "id_pase_de" para guardar de donde viene o a donde fue el
			paciente para cada uno de los dos tipos de pases, de esta forma se puede obtener el registro del
			pase previo o posterior directamente sin tener que hacer una consulta por "id_internacion"
			
			
			Escenarios (tipo_entrada y tipo_salida):
			---------------------------------------
			
				Si "tipo_entrada" es "I" (ingreso) y "tipo_salida" es NULL -> es un ingreso que puede estar:
					
					"estado_pase" ->
					
						"P" pendiente: todavia no fue aceptado por el secretario de sala o esta en camino
						
						"A" aceptado : el paciente fue aceptado por el secretario de sala
						
						"E" egresado : no puede tomar este valor
					
				Si "tipo_entrada" es "P" (pase de) y "tipo_salida" es NULL -> es un pase de:
				
					"estado_pase" ->
				
						"P" pendiente: es un "pase de" que no tiene ingresado un "pase a". Puede que un paciente
							llegue a la sala, pero no se halla ingresado el pase a
							
						"A" aceptado : el secretario de sala acepta el pase de

											
				Si "tipo_salida" NO es NULL, entonces el campo "estado_pase" especifica el estado del tipo
					de salida y solo puede tomar el valor de "E" (egresado)
					
				Si "tipo_salida" es "A" (alta medica) -> es un alta o un traslado
					
				Si "tipo_salida" es "O" (obito) -> es alta por defuncion
				
				Si "tipo_salida" es "P" (pase a) -> es un pase a	
				
			El campo "estado_pase" refleja el estado del pase de entrada ("tipo_entrada") cuando el "tipo_salida" 
				es NULL. Si	"tipo_salida" no es NULL, entonces "estado_pase" solo puede ser "E" que determina que
				el paciente fue egresado de la sala, por un pase a, un alta medica o por defuncion.
				

	* Se agrega la PRIMARY KEY (base) a la tabla versiones
	
	* Se agrega el campo "observaciones" a la tabla "configuraciones_sistemas" y se agregan varios registros 
		a la tabla
	
	* Se agregan los codigos de documentos a la tabla "codigos_hmi". Se utiliza el siguiente comando sql:
	
		INSERT INTO codigos_hmi VALUES	
								(0,'1','DNI',11,'tipo de documento'),
								(0,'2','LC',11,'tipo de documento'),
								(0,'3','LE',11,'tipo de documento'),
								(0,'4','CI',11,'tipo de documento'),
								(0,'5','OTR',11,'tipo de documento'),
								(0,'9','DNR',11,'tipo de documento');
								
									
	* Se cambian en la tabla "internaciones" a NULL los campos:
	
		egr_fecha_hora 						DATETIME 				NULL,
		egr_cant_dias 						INTEGER 	UNSIGNED 	NULL,
		egr_prorroga 						VARCHAR(255) 			NULL,
		egr_cant_dias_prorroga 				INTEGER 	UNSIGNED 	NULL,
		egr_tipo 							VARCHAR(255) 			NULL,
		egr_codigo_hmi_medio_traslado 		CHAR(2) 				NULL,
		egr_autopsia 						VARCHAR(255) 			NULL,
		deriv2_cod_dep_adm 					CHAR(1) 				NULL,
		deriv2_cod_loc 						CHAR(2) 				NULL,
		deriv2_cod_dpto 					CHAR(3) 				NULL,
		deriv2_cod_prov 					CHAR(2) 				NULL,
		deriv2_cod_pais 					CHAR(3) 				NULL,
		nac_fecha 							DATETIME 				NULL,
		nac_edad_gest 						INTEGER 	UNSIGNED 	NULL,
		nac_paridad 						INTEGER 	UNSIGNED 	NULL,
		nac_tipo_parto 						INTEGER 	UNSIGNED 	NULL
		
			
	* Se corre el script servicios.sql v 0.3a
	
	NOTA: se deben ejecutar hmi2.sql y luego servicios.sql para que se ejecuten los DROPS de tablas correctamente
	
	* Se agrega el campo "id_paciente" en la tabla "internaciones"
	
	* Se arregla el error ortografico del campo "condigo_hmi_situacion_laboral" y se reemplazó 
		por "codigo_hmi_situacion_laboral"
		
		
Version 0.62a		11/01/2010
------------------------------
	
	* Se agrega el campo "id_efector" a la tabla "salas"
	
	* Se agrega el indice unico "idx_unique_id_efector_servicio_id_sala" a la tabla "servicios_salas" para no
		permitir que se repita el servicio para cada sala
		
	* Se quita del script la generacion de las tablas "servicios_salas" y "pases", y se generan a partir de 
		ahora con el script "servicios.sql", el cual se comienza a versionar
		
	* A partir de ahora las tablas "servicios_estadistica", "efectores_servicios" y "salas" se
		cargaran con los datos obtenidos del sipes con el script "servicios.sql"
		
	* Se modifica el indice unico "idx_unique_nombre" por "idx_unique_id_efector_nombre" y se agrega el
		"id_efector" al indice, de manera que, no se repita el mismo "nombre" de "sala" por "efector"
		
	* Se cambia la definicion del campo "nombre" de la tabla "salas" a VARCHAR(255)
	
	
Version 0.61a		14/12/2009
-------------------------------------

	* Se agregan las tablas del CIE10
	
		- "ciex_4"				contiene los codigos y descripciones de la CIE10 con 4 digitos
		
		- "ciex_3"				contiene los codigos y descripciones de la CIE10 con 3 digitos
		
		- "ciex_titulos"		contiene las descripciones y rangos de los Capitulos, grupos y subgrupos
		
		- "ciex_restricciones"	contiene restricciones especificas para determinadas patologias
		
		- Se cargaron los diagnosticos de la CIE 10 obtenidas de los archivos de textos actualizados al dia
			de la fecha del HMI. Al migrar se encontraron codigos de 4 digitos que pertenecian a grupos de
			3 digitos no existentes. Estos datos no pudieron integrarse al fallar la foreign key correspondiente
				
	* Se agrega la tabla "diagnosticos" que relaciona la internacion con un codigo del CIE10 de 4 digitos
	
	
	
		
Version 0.6a		01/12/2009
------------------------------

	* Se agrega la tabla "configuraciones_sistemas" que tendra la configuracion
		donde el sistema estara funcionando
		
	* Se agrega el campo "ocupada" en la tabla "camas"
	
	* Se agrega la tabla "internaciones"
	
	* Se agrega la tabla "nacimientos"
	
	* Se agrega la tabla "internaciones_operaciones"
	
	* Se agrega la tabla pases
	
	
		estados:
			
			- pendiente 		"P" : la "sala/servicio" tiene un "ingreso" o un "pase de" pendiente a confirmar
			
			- aceptado  		"A" : la "sala/servicio" confirmo el "ingreso" o el "pase de"
			
			- en transito 		"T" : la "sala/servicio" realizo un "pase a"
			
			- pase confirmado 	"C" : la "sala/servicio" a la cual se le hizo el "pase a", confirmo el "pase de"
			
			- egresado 			"E" : la "sala/servicio" confirmo el egreso por el motivo que corresponda
			
	* Se comienza el estudio de las tablas CIE10 (chequear si codifican con 3 o con 4 digitos)
	
	* Se cambia el nombre de la tabla "version" a "versiones"
	
			
Version 0.4a		24/11/2009
------------------------------

	* Se eliminan las tablas de codigos terminadas con "hmi" y se agrega la tabla "codigos_hmi" con
		la siguiente estructura:
		
			id_codigo_hmi			INTEGER UNSIGNED
			codigo_hmi				CHAR(2)			
			descripcion				VARCHAR(50)		
			tipo_codigo				INTEGER			
			desc_tipo_codigo		VARCHAR(50)
			
	* Se cargan los codigos hmi existentes en la tabla anterior
	

Version 0.2b		20/11/2009
------------------------------

	* Se crean los scripts para crear las tablas "efectores" y "dependencias_administrativas", junto
		con las tablas de "localidades", "departamentos", "provincias" y "paises" como tablas
		InnoDB para poder trabajar con claves foraneas, ya que han sido trabajadas como
		MyISAM en la base de personas v1.4b
		VER release_notes_0_2a.txt de [efectores]
		
	* Se crea la tabla "efectores_servicios" y se carga la información de los servicios de
		internacion y consultorio externo obtenidos del sipes. Tiene la siguiente estructura:
		
			id_efector_servicio				INTEGER    
		    id_efector 						INTEGER	         
		    id_servicio_estadistica			INTEGER	
		    claveestd						CHAR(8)	           
		    cod_servicio					CHAR(3)	         
		    sector							CHAR(1)	             
		    subsector						CHAR(1)	           
		    fecha_apertura					DATE	          
		    fecha_cierre					DATE	            
		
				
		
	* Se agrega la tabla "condicion_os_hmi" con los datos correspondientes
	
	* Se agrega la relacion entre la tabla "servicios_salas" y "efectores_servicios" unidas
		por el campo "id_efector_servicio"
		
			
Version 0.2a		18/11/2009
------------------------------

	* Se quito la relacion entre "servicios_salas" y la tabla "common" del diagnose
		
	* Se agregan las tabla "operaciones" con codigos 2008 obtenida del sistema "sihos". Dentro
		de esta tabla se creo un campo "nom_red_operacion" que se inicializó cortando el nombre
		original en 30 caracteres sin tomar un criterio
		
	* Se copian las tablas de "efectores", "dependencias_administrativas", "localidades", 
		"departamentos", "provincias" y	"paises" de la base de datos personas v1.4b
		nota: estas tablas son MyISAM
		
	* Se crea tabla "servicios" con los codigos y descripciones del servicio nuclear establecido por nacion
	
		- se genera la tabla "servicios" con codigos 2008 obtenida del sistema sihos, con 
			los siguientes campos:
			
				id_servicio			integer
				cod_servicio		char(3)
				nom_servicio		varchar(255)
				nom_red_servicio	varchar(30)
	
		- se carga el campo "nom_red_servicio" cortando la descripcion que se utiliza en el campo 
			"nom_servicio", sin tomar ningun criterio. Este campo debe ser cargado con una descripcion
			adecuada

	* Se crea la tabla "servicios_estadistica" con los codigos de servicio, sector y subsector que
		maneja la direccion de estadistica de la provincia con los siguientes campos:
		
			id_servicio_estadistica			integer		pk
			id_servicio						integer		fk
			cod_servicio					char(3)
			sector							char(1)
			subsector						char(1)
			nom_servicio_estadistica		varchar(255)
			nom_red_servicio_estadistica	varchar(30)
			
			unique index idx_unique_cod_sector_subsector (cod_servicio,sector,subsector)
		
	

Version 0.0a
------------

	* Se define el motor de base de datos MySql y el tipo de tablas InnoDB para trabajar
	
	* Se crearon las tablas "camas", "habitaciones", "salas", "servicios_salas" para
		manejo de la configuracion edilicia
	
	* Se crearon la tablas de codigo "instruccion_hmi", "situacion_laboral_hmi",
		"asociado_hmi", "tipo_edad"
		
	* Se creo una tabla "version" donde se guarda la version y la fecha de creacion
		de la base de datos
	
	* Se cargo la tabla "common" para prueba con la información a la fecha del Cullen